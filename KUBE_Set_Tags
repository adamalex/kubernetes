#!/bin/bash
# ---
# RightScript Name: KUBE Set Tags
# Inputs:
#   KUBE_CLUSTER:
#     Category: Application
#     Description: Cluster name for the cluster. Must be unique per account.
#     Input Type: single
#     Required: true
#     Advanced: false
#   KUBE_ROLE:
#     Category: Application
#     Input Type: single
#     Required: true
#     Advanced: false
#     Possible Values:
#     - text:master
#     - text:node
#   MY_IP:
#     Category: RightScale
#     Input Type: single
#     Required: true
#     Advanced: true
#     Default: env:PRIVATE_IP
#   SERVER_NAME:
#     Category: RightScale
#     Input Type: single
#     Required: true
#     Advanced: true
#     Default: env:RS_SERVER_NAME
# Attachments: []
# ...

function tag_and_verify()
{
  local  tag=$1
  echo "Adding server tag: $tag"
  
  rs_api_cmd="rsc"

  i="0"
  while [ $i -lt 3 ]
  do
  
    # Use the RL10 proxy to access the api
    echo "ADD TAG COMMAND: ${rs_api_cmd} --rl10 cm15 multi_add /api/tags/multi_add \"resource_hrefs[]=$RS_SELF_HREF\" \"tags[]=$tag\""
    ${rs_api_cmd} --rl10 cm15 multi_add /api/tags/multi_add "resource_hrefs[]=$RS_SELF_HREF" "tags[]=$tag"

    sleep 3
    current_tag=`${rs_api_cmd} --pp --rl10 cm15 by_resource /api/tags/by_resource "resource_hrefs[]=$RS_SELF_HREF" | grep "$tag" || true`

    if test "$current_tag" = "" ; then
      echo "[$i] Failed to add tag. Sleep and retry..."
    else
      echo "[$i] Successfully added tag."
      break
    fi

   sleep 5
   i=$[$i+1]
 done
}

tag_and_verify "kube:ip=$MY_IP"
tag_and_verify "kube:role=$KUBE_ROLE"
tag_and_verify "kube:cluster=$KUBE_CLUSTER"

# Uses $SERVER_NAME

if [ "$KUBE_ROLE" = "node" ]; then
  tag_and_verify "kube:node_id=${SERVER_NAME/*#/}"
fi
