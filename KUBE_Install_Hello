#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# ---
# RightScript Name: KUBE Install Hello
# Inputs: {}
# Attachments:
# - tagging.sh
# ...

# shellcheck source=attachments/tagging.sh
source "$RS_ATTACH_DIR"/tagging.sh

if kubectl get svc hello-world; then
  kubectl delete svc hello-world
fi

if kubectl get rc hello-world; then
  kubectl delete rc hello-world
fi

set +e
read -r -d '' manifest << EOF
kind: List
apiVersion: v1
items:
- kind: ReplicationController
  apiVersion: v1
  metadata:
    labels:
      app: hello-world
    name: hello-world
    namespace: default
  spec:
    replicas: 3
    selector:
      app: hello-world
    template:
      metadata:
        labels:
          app: hello-world
      spec:
        containers:
        - name: hello-world
          image: tutum/hello-world:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 80
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            timeoutSeconds: 30
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: hello-world
    name: hello-world
    namespace: default
  spec:
    type: NodePort
    ports:
    - port: 80
      targetPort: 80
    selector:
      app: hello-world
EOF
set -e

output=$(echo "$manifest" | /opt/kubernetes/server/bin/kubectl create -f -)
echo "$output"

port=$(echo "$output" | grep -Po '\(tcp:\K\d+')
tag_and_verify "kube:hello_port=$port"
