#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# ---
# RightScript Name: KUBE Bootstrap
# Inputs:
#   KUBE_RELEASE_TAG:
#     Category: Application
#     Description: Version tag as found at https://github.com/kubernetes/kubernetes/releases
#     Input Type: single
#     Required: true
#     Advanced: false
#     Possible Values:
#     - text:v1.3.0-alpha.3
#     Default: text:v1.3.0-alpha.3
#   FLANNEL_VERSION:
#     Category: Application
#     Description: Version number as found at https://github.com/coreos/flannel/releases
#       (omit the leading 'v')
#     Input Type: single
#     Required: true
#     Advanced: false
#     Possible Values:
#     - text:0.5.5
#     Default: text:0.5.5
#   KUBE_CLUSTER:
#     Category: Application
#     Description: Cluster name for the cluster. Must be unique per account.
#     Input Type: single
#     Required: true
#     Advanced: false
#   KUBE_ROLE:
#     Category: Application
#     Input Type: single
#     Required: true
#     Advanced: false
#     Possible Values:
#     - text:master
#     - text:node
#   MY_IP:
#     Category: RightScale
#     Input Type: single
#     Required: true
#     Advanced: true
#     Default: env:PRIVATE_IP
#   SERVER_NAME:
#     Category: RightScale
#     Input Type: single
#     Required: true
#     Advanced: true
#     Default: env:RS_SERVER_NAME
# Attachments:
# - kubernetes.sh
# - kube-apiserver.manifest.sh
# - kube-controller-manager.manifest.sh
# - kube-scheduler.manifest.sh
# ...

# shellcheck source=attachments/kubernetes.sh
source "$RS_ATTACH_DIR"/kubernetes.sh

# shellcheck source=attachments/kube-apiserver.manifest.sh
source "$RS_ATTACH_DIR"/kube-apiserver.manifest.sh

# shellcheck source=attachments/kube-controller-manager.manifest.sh
source "$RS_ATTACH_DIR"/kube-controller-manager.manifest.sh

# shellcheck source=attachments/kube-scheduler.manifest.sh
source "$RS_ATTACH_DIR"/kube-scheduler.manifest.sh

# COMMON CONFIGURATION
install_kubernetes
write_hosts_file

if [[ "$KUBE_ROLE" = "master" ]]; then

  # MASTER SERVER CONFIGURATION
  bootstrap_docker
  pull_docker_images
  start_etcd
  write_flannel_config_to_etcd
  write_apiserver_manifest
  write_scheduler_manifest
  write_controller_manifest

  echo "Starting Kubernetes services..."

  sudo /opt/kubernetes/server/bin/kubelet --config=/etc/kubernetes/manifests --allow-privileged=true &> /dev/null &

else

  # NODE SERVER CONFIGURATION
  bootstrap_flannel
  source /run/flannel/subnet.env
  create_flannel_bridge cbr0
  prepare_node_docker_config
  bootstrap_docker

  echo "Starting Kubernetes services..."

  sudo /opt/kubernetes/server/bin/kubelet --api-servers=http://kube-master:8080 --allow-privileged=true &> /dev/null &
  sudo /opt/kubernetes/server/bin/kube-proxy --master=http://kube-master:8080 &> /dev/null &
fi
